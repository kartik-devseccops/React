name: Build and Push to GCR

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure Docker to use Google Cloud
        run: gcloud auth configure-docker gcr.io

      - name: Set Environment Variables
        run: |
          echo "PROJECT_ID=$(gcloud config get-value project)" >> $GITHUB_ENV
          echo "REPO_NAME=$(echo ${{ github.event.repository.name }} | tr '[:upper:]' '[:lower:]')" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV

      - name: Ensure GCR Repository Exists
        run: |
          if ! gcloud artifacts repositories describe $REPO_NAME --location=us-central1 >/dev/null 2>&1; then
            echo "Creating GCR repository: $REPO_NAME"
            gcloud artifacts repositories create $REPO_NAME \
              --repository-format=docker \
              --location=us-central1 \
              --description="GCR Repository for $REPO_NAME"
          else
            echo "GCR repository $REPO_NAME already exists."
          fi

      - name: Build and Push Docker Image to GCR
        run: |
          echo "Building Docker image..."
          docker build -t gcr.io/$PROJECT_ID/$REPO_NAME:$IMAGE_TAG .
          
          echo "Pushing Docker image to GCR..."
          docker push gcr.io/$PROJECT_ID/$REPO_NAME:$IMAGE_TAG

      - name: Verify Image in GCR
        run: |
          echo "Checking if image exists in GCR..."
          gcloud container images list-tags gcr.io/$PROJECT_ID/$REPO_NAME --format="table(digest, tags, timestamp.datetime)"
