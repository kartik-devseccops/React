name: Build, Push, and Deploy to GKE

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure Docker to use Google Cloud
        run: gcloud auth configure-docker gcr.io

      - name: Set Environment Variables
        run: |
          echo "PROJECT_ID=${{ secrets.GCP_PROJECT_ID }}" >> $GITHUB_ENV
          echo "REPO_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV
          echo "GCR_REGISTRY=gcr.io/${{ secrets.GCP_PROJECT_ID }}" >> $GITHUB_ENV
          echo "GKE_CLUSTER_NAME=my-gke-cluster" >> $GITHUB_ENV
          echo "GKE_REGION=us-central1-a" >> $GITHUB_ENV
          echo "ARGOCD_APP_NAME=your-app" >> $GITHUB_ENV

      - name: Build and Push Docker Image to GCR
        run: |
          docker build -t $GCR_REGISTRY/$REPO_NAME:latest -t $GCR_REGISTRY/$REPO_NAME:$IMAGE_TAG .
          docker push $GCR_REGISTRY/$REPO_NAME:latest
          docker push $GCR_REGISTRY/$REPO_NAME:$IMAGE_TAG

      - name: Authenticate to GKE
        env:
          USE_GKE_GCLOUD_AUTH_PLUGIN: True
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER_NAME --region $GKE_REGION --project $PROJECT_ID

      - name: Update Kubernetes Deployment
        run: |
          kubectl set image deployment/react react=$GCR_REGISTRY/$REPO_NAME:$IMAGE_TAG --namespace=default
          kubectl rollout status deployment/react --namespace=default

      - name: Sync Application in ArgoCD
        run: |
          argocd login your-argocd-server --username admin --password ${{ secrets.ARGOCD_PASSWORD }}
          argocd app sync $ARGOCD_APP_NAME
          argocd app wait $ARGOCD_APP_NAME --health
