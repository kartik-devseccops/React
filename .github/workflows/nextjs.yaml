name: Build, Push, and Deploy to GKE

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure Docker to use Google Cloud
        run: gcloud auth configure-docker gcr.io

      - name: Set Environment Variables
        run: |
          PROJECT_ID=$(gcloud config get-value project)
          REPO_NAME=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]')

          if [[ -z "$PROJECT_ID" || -z "$REPO_NAME" ]]; then
            echo "Error: PROJECT_ID or REPO_NAME is empty!" >&2
            exit 1
          fi

          echo "PROJECT_ID=$PROJECT_ID" >> $GITHUB_ENV
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV
          echo "GCR_REGISTRY=gcr.io/$PROJECT_ID" >> $GITHUB_ENV
          echo "GCR_REPOSITORY=$REPO_NAME" >> $GITHUB_ENV
          echo "GKE_CLUSTER_NAME=your-cluster-name" >> $GITHUB_ENV
          echo "GKE_REGION=us-central1" >> $GITHUB_ENV
          echo "ARGOCD_APP_NAME=your-app" >> $GITHUB_ENV

      - name: Build and Push Docker Image to GCR
        run: |
          docker build -t $GCR_REGISTRY/$GCR_REPOSITORY:latest -t $GCR_REGISTRY/$GCR_REPOSITORY:$IMAGE_TAG .
          docker push $GCR_REGISTRY/$GCR_REPOSITORY:latest
          docker push $GCR_REGISTRY/$GCR_REPOSITORY:$IMAGE_TAG

      - name: Install gke-gcloud-auth-plugin
        run: |
          gcloud components install gke-gcloud-auth-plugin
          gcloud components update

      - name: Authenticate to GKE
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER_NAME --region $GKE_REGION --project $PROJECT_ID

      - name: Update Kubernetes Deployment
        run: |
          kubectl set image deployment/$REPO_NAME $REPO_NAME=$GCR_REGISTRY/$GCR_REPOSITORY:$IMAGE_TAG --namespace=default
          kubectl rollout status deployment/$REPO_NAME --namespace=default

      - name: Sync Application in ArgoCD
        run: |
          argocd login your-argocd-server --username admin --password ${{ secrets.ARGOCD_PASSWORD }}
          argocd app sync $ARGOCD_APP_NAME
          argocd app wait $ARGOCD_APP_NAME --health
