name: Build and Deploy on GCP

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure Docker to use Google Cloud
        run: |
          gcloud auth configure-docker gcr.io

      - name: Set Environment Variables
        id: prep
        run: |
          echo "PROJECT_ID=$(gcloud config get-value project)" >> $GITHUB_ENV
          echo "REPO_NAME=${{ github.event.repository.name }}" >> $GITHUB_ENV
          echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV
          echo "GKE_CLUSTER=my-gke-cluster" >> $GITHUB_ENV
          echo "GKE_ZONE=us-central1-a" >> $GITHUB_ENV

      - name: Setup Java and Gradle
        if: ${{ contains(env.BUILD_TOOL, 'gradle') }}
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Build JAR with Gradle
        if: ${{ contains(env.BUILD_TOOL, 'gradle') }}
        run: |
          chmod +x gradlew
          ./gradlew build

      - name: Build and Push Docker Image
        run: |
          docker build -t gcr.io/beaming-surfer-452610-r2/react:1f28d4bcf8177ebd57a0790ad58b2f7c195f39b0 .
          docker push gcr.io/$PROJECT_ID/$REPO_NAME:$IMAGE_TAG

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Get Kubernetes Credentials
        run: |
          gcloud container clusters get-credentials $GKE_CLUSTER --zone $GKE_ZONE --project $PROJECT_ID

      - name: Deploy to GKE
        run: |
          kubectl set image deployment/$REPO_NAME $REPO_NAME=gcr.io/$PROJECT_ID/$REPO_NAME:$IMAGE_TAG --namespace=default
          kubectl rollout status deployment/$REPO_NAME --namespace=default
